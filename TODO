BUGS
====
- There is some outer space in gridfit and horizgrid layouts, fix.
- Layouts gridfit, gridfill, horizgrid and bottomstack leave some space at the bottom when status bar is toggled on, fix.
- Last column in grid{fill,fit} are oversized when there are too many clients if gaps are toggled on, fix.
- The last column in both rows in horizgrid and bottomstack layout may leave some space, fix.
- When changing layouts from monocle{,nogap} to any other (including monocle{nogap,}), if there is only 1 client, the layout is not updated, fix.
- When moving or resizing via mouse is initiated, non-resizable clients are reduced in size and cannot be resized back up, fix.
- When too many clients are present, {v,h}split position the last clients off-monitor, fix.

FEATURES
========
- Move gaps into Pertag.
- Make gaps toggleable per tag.
- Make initgappx per tag.
- Reverse smfact and cfact.
- Implement a layout like tile that uniformly distributes the clients in the two columns.
- Add shift+super+tab binding to move all clients in current tag to the last selected tag.
- Add ctrl+shift+super+tab binding to copy all clients in current tag to the last selected tag.
- Implement a layout that is exactly the same as tile with the difference that all masters are given their own area. The height of each master would be (m->h), the height of each non-master would be (m->h / (n - nm)) and the width of all clients would be (m->w / n).
- Implement a layout that is exactly the same as col with the difference that all non-masters are given their own area. This is basically the same thing as the tile variant but the nm is the amount of non-masters instead of masters.
- Apply nrowgrid and implement a variant ncolgrid.
- Implement a layout that for 1 client fills the whole monitor, then for all added eventh clients splits the previous client vertically and oddth clients splits the previous client horizontally. This is equivalent to tile when n=1,2,3. This is equivalent to tatami when n=4 if the second and third windows swap places with the fourth window.
- Implement a layout that for 1 client fills the whole monitor, for 2 clients is equivalent to tile, then for all added oddth clients splits the previous client vertically and oddth clients splits the previous client horizontally. This is equivalent to tatami when n=4.
- Add nmaster support to {v,h}split by either horizontally splitting the masters or by adjusting the ratio that is 1/2 by default.
- Allow resizing via mouse from all 4 corners.
- Apply a patch that allows moving floating windows with the keyboard.
- Add regex support to warping and other rules.
- Add a rule for iscenteredinfocused that would center the client in the currently focused client if isfloating rule is set to 1.
- Add a key binding to allow to toggle rules and warp rules.
