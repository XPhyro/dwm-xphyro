BUGS
====
- There is some outer space in gridfit and horizgrid layouts, fix.
- Layouts gridfit, gridfill, horizgrid and bottomstack leave some space at the bottom when status bar is toggled on, fix.
- Last column in grid{fill,fit} are oversized when there are too many clients if gaps are toggled on, fix.
- The last column in both rows in horizgrid and bottomstack layout may leave some space, fix.
- When changing layouts from monocle{,nogap} to any other (including monocle{nogap,}), if there is only 1 client, the layout is not updated, fix.
- When moving or resizing via mouse is initiated, non-resizable clients are reduced in size and cannot be resized back up, fix.
- When too many clients are present, {v,h}split position the last clients off-monitor, fix.
- When gaps are toggled, floating clients get smaller, fix.

FEATURES
========
- Move gaps into Pertag.
- Make gaps toggleable per tag.
- Make initgappx per tag.
- Reverse smfact and cfact.
- Implement a layout like tile that uniformly distributes the clients in the two columns.
- Add shift+super+tab binding to move all clients in current tag to the last selected tag.
- Add ctrl+shift+super+tab binding to copy all clients in current tag to the last selected tag.
- Implement a layout that is exactly the same as tile with the difference that all masters are given their own area. The height of each master would be (m->h), the height of each non-master would be (m->h / (n - nm)) and the width of all clients would be (m->w / n).
- Implement a layout that is exactly the same as col with the difference that all non-masters are given their own area. This is basically the same thing as the tile variant but the nm is the amount of non-masters instead of masters.
- Apply nrowgrid and implement a variant ncolgrid.
- Implement a layout that for 1 client fills the whole monitor, then for all added eventh clients splits the previous client vertically and oddth clients splits the previous client horizontally. This is equivalent to tile when n=1,2,3. This is equivalent to tatami when n=4 if the second and third windows swap places with the fourth window.
- Implement a layout that for 1 client fills the whole monitor, for 2 clients is equivalent to tile, then for all added oddth clients splits the previous client vertically and oddth clients splits the previous client horizontally. This is equivalent to tatami when n=4.
- Add nmaster support to {v,h}split by either horizontally splitting the masters or by adjusting the ratio that is 1/2 by default.
- Allow resizing via mouse from all 4 corners.
- Apply a patch that allows moving floating windows with the keyboard.
- Add regex support to warping and other rules.
- Add a rule for iscenteredinfocused that would center the client in the currently focused client if isfloating rule is set to 1.
- Add a key binding to allow to toggle rules and warp rules.
- Implement a layout that splits the monitor into two. The left side is tiled like tile layout with masters and the right side is like gridfit layout with non-masters.
- Implement a way to set scratchpad key of a client after its initialisation in applyrules.
- Implement a rule to make clients stay in the background, like a wallpaper. This would allow for easier/better diagnostics, live wallpapers, etc.
- Add key bindings to toggle resizehints and decorhints.
- Add a key binding to toggle non-warp rules.
- Try this: https://dwm.suckless.org/patches/keymodes/
- Apply this (concept): https://dwm.suckless.org/patches/keycodes/
- Implement a gapless tile layout.
- Implement rules for gaps. This should be straightforward for most layouts as gaps are not implemented by individual layouts. For other, more specific layouts that are "aware" of these gaps, ensure that they respect these rules.
- Allow clients to exist in multiple monitors (if this is not supported already) and add key bindings to manage such scenarios.
- Turn {v,h}split into binary trees, like in bspwm.
- Clients blurring the clients and the wallpaper behind them. Should nest adequately with multiple clients.
- Allow marking a client (per tag) and returning focus to it with a key binding.
- In swaptags, also swap tag layout.
- Do not warp the cursor to floating clients. Add a key binding to toggle this behaviour.
